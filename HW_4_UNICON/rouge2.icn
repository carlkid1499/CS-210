procedure main()
	grid:= list(24, repl(" ", 78))
    
    # generate the xy coordinates
    # and the size of the room
    xy := xy_loc()
    size := rm_size()
    
    # place the room on the grid
    place_rm(xy,size,grid)

    # generate the xy coordinates
    # and the size of the room
    xy := xy_loc()
    size := rm_size()

    # Are there any rooms next door?
    nearby := nearby_rm(xy,size,grid)
    
    if(nearby == 1) then {
        write("Room nearby: ",\nearby)
    }
    else {
        write("No nearby room: ",\nearby)
        # place the room on the grid
        place_rm(xy,size,grid)
    }

    # Is the room in bounds
    bound := rm_in_bound(xy,size)
    if(bound == 1) then {
        write("Yes room is in bounds")
    }
    else {
        write("Room not in bound")
    }

    show(grid)
end


procedure xy_loc()
    # Generate xy coordinates
    # for the grid.
    # 0123...78
    # 1123...78
    # 2123...78
    # etc.

    x := ?78
    y := ?24

    # debug code
    write("x: ",\x)
    write("y: ",\y)

    xy := list(x,y)
    return xy
end

procedure rm_size()
    # Generate the room size
    # and deterine if it'll
    # fit on the grid.

    width := ?78
    height := ?24

    # debug code
    write("width: ",\width)
    write("height: ",\height)
    
    if(width <= 2 ) then {
        width := ?78
        # debug code
        write("width: ",\width)
        write("height: ",\height)
    }
    else if(height <= 2) then {
        height := ?24
        # debug code
        write("width: ",\width)
        write("height: ",\height)
    }
    rm_dimen := list(width,height)
    return rm_dimen 
end

procedure rm_in_bound(xy,size)
    # Determine if round is within bounds
    # bound being 1 is yes
    # bound being 0 is no

    bound := 1
    width := 78
    height := 24
    if(xy[1]+size[1] > width) then {
        bound := 0
    }
    if(xy[2]+size[2] > height) then {
        bound := 0
    }
    return bound
end

procedure nearby_rm(xy,size,grid)
    # Check to see if there are 
    # any rooms nearby.

    nearby := 0
    every i := xy[1] to (xy[1]+size[1]) do {
        if(grid[xy[2][xy[1]+i]] == "-") then {
            nearby := 1
        }
        if(grid[xy[2]+size[2]+1][xy[1]+size[1]] == "-") then {
            nearby := 1
        }
        if(grid[xy[2][xy[1]+i]] == "|") then {
            nearby := 1
        }
        if(grid[xy[2]+size[2]+1][xy[1]+size[1]] == "|") then {
            nearby := 1
        }
    }
    every i := 1 to size[2] do {
        if(grid[xy[2]+i][xy[1]+size[1]] == "|") then {
            nearby := 1
        }
        if(grid[xy[2]+i][xy[1]+(size[1]*2)-1] == "|") then {
            nearby := 1
        }
        if(grid[xy[2]+i][xy[1]+size[1]] == "-") then {
            nearby := 1
        }
        if(grid[xy[2]+i][xy[1]+(size[1]*2)-1] == "-") then {
            nearby := 1
        }  
    }
    return nearby
end

procedure place_rm(xy,size,grid)   
    # Place the room on the grid

    grid[xy[2]][xy[1]+size[1]] := repl("-",size[1])

    every i := 1 to size[2] do {
        grid[xy[2]+i][xy[1]+size[1]] := "|"
        grid[xy[2]+i][xy[1]+(size[1]*2)-1] := "|"

    }
	grid[xy[2]+size[2]+1][xy[1]+size[1]] := repl("-",size[1])
end

procedure show(L)
	every write(!L)
end